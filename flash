#!/bin/sh
GREP="grep";

AVR_CPU_FREQUENCY_HZ=16000000 cargo build --release

# cf. https://github.com/qmk/qmk_firmware/blob/ca10e4d07579ae85c6720fdd3db3a0bfb5ebff36/platforms/avr/flash.mk
list_devices() {
    if $GREP -q -s icrosoft /proc/version; then
        wmic.exe path Win32_SerialPort get DeviceID 2>/dev/null | LANG=C perl -pne 's/COM(\d+)/COM.($$1-1)/e' | sed 's!COM!/dev/ttyS!' | xargs echo -n | sort;
    elif [ "$(uname)" = "FreeBSD" ]; then
        # shellcheck disable=SC2010
        ls /dev/tty* | grep -v '\.lock$$' | grep -v '\.init$$';
    else
        ls /dev/tty*;
    fi;
};
USB= ;
printf "Waiting for USB serial port - reset your controller now (Ctrl+C to cancel)";
TMP1=$(mktemp);
TMP2=$(mktemp);
BOOTLOADER_RETRY_TIME=0.5;
list_devices > "$TMP1";
while [ -z "$USB" ]; do
    sleep $BOOTLOADER_RETRY_TIME;
    printf ".";
    list_devices > "$TMP2";
    USB=$(comm -13 "$TMP1" "$TMP2" | $GREP -o '/dev/tty.*');
    mv "$TMP2" "$TMP1";
done;
rm "$TMP1";
echo "";
echo "Device $USB has appeared; assuming it is the controller.";
if $GREP -q -s 'MINGW\|MSYS\|icrosoft' /proc/version; then
    USB=$(echo "$USB" | LANG=C perl -pne 's/\/dev\/ttyS(\d+)/COM.($$1+1)/e');
    echo "Remapped USB port to $$USB";
    sleep 1;
else
    printf "Waiting for %s to become writable." "$USB";
    while [ ! -w "$USB" ]; do sleep $BOOTLOADER_RETRY_TIME; printf "."; done; echo "";
fi;

avrdude -patmega32u4 -cavr109 -v -P "$USB" -b57600 -D -Uflash:w:target/avr-atmega32u4/release/rustkbd.elf:e
